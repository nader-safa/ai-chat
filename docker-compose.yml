services:
  web:
    build:
      context: ./packages/client
      dockerfile: Dockerfile
    container_name: ai-chat-web
    restart: unless-stopped
    ports:
      - '5173:5173'
    # environment:
    #   VITE_API_URL: http://ai-chat-api:3000
    networks:
      - ai-chat-network
    depends_on:
      - api
  api:
    build:
      context: ./packages/server
      dockerfile: Dockerfile
    container_name: ai-chat-api
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - .env.production
    networks:
      - ai-chat-network
    volumes:
      - ./logs:/var/log

  # postgres:
  #   image: postgres:17-alpine
  #   container_name: ai-chat-postgres
  #   restart: unless-stopped
  #   ports:
  #     - '5432:5432'
  #   environment:
  #     POSTGRES_USER: ai-chat-postgres
  #     POSTGRES_PASSWORD: ai-chat-postgres
  #     POSTGRES_DB: ai-chat
  #   networks:
  #     - ai-chat-network
  #   volumes:
  #     - ai-chat-postgres-data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: ai-chat-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    networks:
      - ai-chat-network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - webroot:/var/www/html
      - certbot-etc:/etc/letsencrypt
    depends_on:
      - web
      - api

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email nader.safa.dev@gmail.com --agree-tos --non-interactive --keep-until-expiring -d aichat.dishyy.com

networks:
  ai-chat-network:
    driver: bridge
volumes:
  # ai-chat-postgres-data:
  webroot:
  certbot-etc:
  certbot-var:
  logs:
